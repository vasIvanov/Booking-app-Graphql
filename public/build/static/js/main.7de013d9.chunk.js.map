{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventItem/EventItem.js","components/Events/EventList.js","components/Spinner/Spinner.js","pages/Events.js","components/Bookings/BookingList.js","components/Bookings/BookingsChart.js","components/Bookings/BookingsControls.js","pages/Bookings.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","AuthPage","useState","email","setEmail","password","setPassword","isLogin","setIsLogin","useContext","AuthContext","className","onSubmit","e","preventDefault","trim","length","reqBody","query","variables","fetch","method","body","JSON","stringify","headers","credentials","then","res","status","Error","json","resData","console","log","data","catch","err","htmlFor","type","id","onChange","value","target","onClick","Modal","props","title","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","Backdrop","EventItem","key","eventId","eventTitle","price","Date","date","toLocaleDateString","creatorId","onDetail","bind","EventList","events","map","event","_id","authUserId","creator","onViewDetail","Spinner","EventsPage","creating","setCreating","setTitle","setPrice","description","setDescription","setDate","setEvents","isLoading","setIsLoading","selectedEvent","setSelectedEvent","isActive","useEffect","fetchEvents","modalCancel","Fragment","updatedEvents","push","createEvent","rows","find","BookingList","onDelete","bookingId","updatedBookings","bookings","filter","booking","setBookings","createdAt","BarChart","require","Bar","BOOKINGS_BUCKETS","Cheap","max","min","Normal","Expensive","BookingsChart","values","labels","datasets","bucket","filteredBookings","reduce","prev","current","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","style","textAlign","BookingsControl","actioveOutput","changeOutputHandler","BookingsPage","output","setOutput","fetchBookings","test","name","html_url","content","MainNavigation","to","App","localStorage","getItem","setToken","setUserId","window","onbeforeunload","setItem","Provider","removeItem","from","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7de013d9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: (token, userId, tokenExpiration) => {},\r\n    logout: () => {}\r\n});","import React, {useState, useContext} from 'react';\r\nimport './Auth.css';\r\nimport AuthContext from '../context/auth-context';\r\n\r\n\r\nconst AuthPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const {login, logout} = useContext(AuthContext);\r\n    \r\n    const submitHanlder = (e) => {\r\n        e.preventDefault();\r\n        if(email.trim().length === 0 || password.trim().length === 0) return;\r\n\r\n        let reqBody= {\r\n            query: `\r\n                query Login($email: String!, $password: String!){\r\n                    login(email: $email, password: $password) {\r\n                        userId\r\n                        token\r\n                        tokenExpiration\r\n                    }\r\n                }\r\n            `,\r\n            variables: {\r\n                email,\r\n                password\r\n            }\r\n        };\r\n\r\n        if(!isLogin) {\r\n            reqBody = {\r\n                query:`\r\n                    mutation CreateUser($email: String!, $password: String!){\r\n                        createUser(userInput: {email: $email, password: $password}){\r\n                            _id\r\n                            email\r\n                        }\r\n                    }\r\n                `,\r\n                variables: {\r\n                    email,\r\n                    password\r\n                }\r\n            };\r\n        }\r\n        \r\n        \r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(reqBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            console.log(resData);\r\n            \r\n            if(resData.data.login.token) {\r\n                login(resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            \r\n        });\r\n    }\r\n\r\n    return(\r\n        <form className=\"auth-form\" onSubmit={submitHanlder}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"email\">E-Mail</label>\r\n                <input type=\"email\" id=\"email\" onChange={(value) => setEmail(value.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" onChange={(value) => setPassword(value.target.value)}/>\r\n            </div>\r\n            <div className=\"form-actions\">\r\n                <button onClick={() => setIsLogin(!isLogin)} type=\"button\">Switch to {isLogin ? 'Signup' : 'Login'}</button>\r\n                <button type=\"submit\">Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AuthPage;","import React from 'react';\r\nimport './Modal.css';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className=\"modal\">\r\n            <header className=\"modal__header\">{props.title}</header>\r\n            <section className=\"modal__content\">\r\n                {props.children}\r\n            </section>\r\n            <section className=\"modal__actions\">\r\n                {props.canCancel && <button className=\"btn\" onClick={props.onCancel}>Cancel</button>}\r\n                {props.canConfirm && <button className=\"btn\" onClick={props.onConfirm}>{props.confirmText}</button>}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = props => {\r\n    return (\r\n        <div className=\"backdrop\"></div>\r\n    )\r\n\r\n}\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport './EventItem.css';\r\n\r\nconst EventItem = (props) => {\r\n    \r\n    return(\r\n        <li key={props.eventId} className=\"event__list-item\">\r\n            <div>\r\n                <h1>{props.eventTitle}</h1>\r\n                <h2>${props.price} - {new Date(props.date).toLocaleDateString()}</h2>\r\n            </div>\r\n            <div>\r\n                {props.userId === props.creatorId ? <p>You create this event.</p> : <button onClick={props.onDetail.bind(this, props.eventId)} className=\"btn\">View Details</button> }\r\n                \r\n            </div>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default EventItem;","import React from 'react';\r\nimport './EventList.css';\r\nimport EventItem from './EventItem/EventItem';\r\n\r\nconst EventList = (props) => {\r\n    const events = props.events.map(event => {\r\n        return (\r\n            <EventItem\r\n                key={event._id}\r\n                eventId={event._id} \r\n                eventTitle={event.title} \r\n                userId={props.authUserId} \r\n                creatorId={event.creator._id} \r\n                price={event.price} \r\n                date={event.date}\r\n                onDetail={props.onViewDetail}\r\n            /> \r\n        );\r\n    })\r\n    return (\r\n        <ul className=\"event__list\">\r\n            {events}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default EventList","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => <div className=\"spinner\">\r\n    <div className=\"lds-dual-ring\"></div>\r\n    </div>;\r\n\r\nexport default Spinner;","import React, { useState, useContext, useEffect } from 'react';\r\nimport './Events.css'\r\nimport Modal from '../components/Modal/Modal';\r\nimport Backdrop from '../components/Backdrop/Backdrop';\r\nimport AuthContext from '../context/auth-context';\r\nimport EventList from '../components/Events/EventList';\r\nimport Spinner from '../components/Spinner/Spinner';\r\n\r\nconst EventsPage = () => {\r\n    const [creating, setCreating] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const {token, userId} = useContext(AuthContext);\r\n    const [events, setEvents] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [selectedEvent, setSelectedEvent] = useState(null);\r\n    let isActive = true;\r\n\r\n    useEffect(() => {\r\n        fetchEvents()\r\n        return () => {\r\n            isActive= false;\r\n        }\r\n    }, []);\r\n    \r\n    const fetchEvents = () => {\r\n        setIsLoading(true);\r\n        const reqBody = {\r\n            query:`\r\n                query {\r\n                    events{\r\n                        _id\r\n                        title\r\n                        description\r\n                        date\r\n                        price\r\n                        creator {\r\n                            _id\r\n                            email\r\n                        }\r\n                    }\r\n                }\r\n            `\r\n        };\r\n    \r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(reqBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            if(isActive) {\r\n                console.log(resData);\r\n                \r\n                setEvents(resData.data.events);\r\n                setIsLoading(false);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            if(isActive) {\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n\r\n    }\r\n    \r\n    const modalConfirm = () => {\r\n        setCreating(false);\r\n        console.log(title, price, date, description);\r\n        \r\n        if(!title || !price || !date || !description) return;\r\n\r\n        const event = {title, price, date, description}\r\n        console.log(event);\r\n        const reqBody = {\r\n            query:`\r\n                mutation CreateEvent($title: String!, $description: String!, $price: Float!, $date: String!){\r\n                    createEvent(eventInput: {title: $title, description: $description, price: $price, date: $date}){\r\n                        _id\r\n                        title\r\n                        description\r\n                        date\r\n                        price\r\n                    }\r\n                }\r\n            `,\r\n            variables: {\r\n                title,\r\n                description,\r\n                price,\r\n                date\r\n            }\r\n        };\r\n    \r\n        \r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(reqBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            const updatedEvents = [...events];\r\n            updatedEvents.push({\r\n                _id: resData.data.createEvent._id,\r\n                title: resData.data.createEvent.title,\r\n                description: resData.data.createEvent.description,\r\n                price: resData.data.createEvent.price,\r\n                date: resData.data.createEvent.date,\r\n                creator: {\r\n                    _id: userId,\r\n                }\r\n            });\r\n            setEvents(updatedEvents);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n        \r\n    }\r\n\r\n    const modalCancel = () => {\r\n        setCreating(false);\r\n        setSelectedEvent(null);\r\n    }\r\n\r\n    const showDetail = (eventId) =>{\r\n        const event = events.find(e => e._id === eventId);\r\n        setSelectedEvent(event)\r\n    }\r\n\r\n    const bookEvent = () => {\r\n        if(!token) {\r\n            setSelectedEvent(null);\r\n            return;\r\n        }\r\n        const reqBody = {\r\n            query:`\r\n                mutation BookEvent($eventId: ID!){\r\n                    bookEvent(eventId: $eventId){\r\n                        _id\r\n                        createdAt\r\n                        updatedAt\r\n                        user{\r\n                            email\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n            variables: {\r\n                eventId: selectedEvent._id\r\n            }\r\n        };\r\n    \r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(reqBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            console.log(resData);\r\n            setSelectedEvent(null);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {(creating || selectedEvent)  && <Backdrop />}\r\n            {creating && <Modal title=\"Add Event\" canCancel canConfirm onCancel={modalCancel} onConfirm={modalConfirm} confirmText='Confrim'>\r\n                <form>\r\n                    <div className=\"form-control\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={(e) => setTitle(e.target.value)}/>\r\n                    </div>   \r\n                    <div className=\"form-control\">\r\n                        <label htmlFor=\"price\">Price</label>\r\n                        <input type=\"number\" id=\"price\" onChange={(e) => setPrice(+e.target.value)}/>\r\n                    </div> \r\n                    <div className=\"form-control\">\r\n                        <label htmlFor=\"date\">Date</label>\r\n                        <input type=\"datetime-local\" id=\"date\" onChange={(e) => setDate(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label htmlFor=\"description\">Description</label>\r\n                        <textarea  id=\"description\" rows=\"4\" onChange={(e) => setDescription(e.target.value)}/>\r\n                    </div>\r\n                </form>    \r\n            </Modal>}\r\n\r\n            {selectedEvent &&  <Modal title={selectedEvent.title} canCancel canConfirm onCancel={modalCancel} onConfirm={bookEvent} confirmText={token ? 'Book' : 'Confirm'}>\r\n                  <h1>{selectedEvent.title}</h1>\r\n                  <h2>${selectedEvent.price} - {new Date(selectedEvent.date).toLocaleDateString()}</h2>\r\n                  <p>{selectedEvent.description}</p>\r\n            </Modal>}\r\n\r\n            {token && <div className=\"events-control\">\r\n                <p>Create your own Events</p>\r\n                <button className=\"btn\" onClick={() => setCreating(true)}>Create Event</button>\r\n            </div>}\r\n            {events && !isLoading ? <EventList authUserId={userId} events={events} onViewDetail={showDetail}/> : <Spinner />}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EventsPage;","import React, {useContext, useState} from 'react';\r\nimport './BookingList.css';\r\nimport AuthContext from '../../context/auth-context';\r\n\r\nconst BookingList = props => {\r\n    const {token, userId} = useContext(AuthContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onDelete = (bookingId) => {\r\n        setIsLoading(true);\r\n        const reqBody = {\r\n            query:`\r\n                mutation CancelBooking($id: ID!) {\r\n                    cancelBooking(bookingId: $id){\r\n                        _id\r\n                        title\r\n                    }\r\n                }\r\n            `,\r\n            variables: {\r\n                id: bookingId\r\n            }\r\n        };\r\n    \r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(reqBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            const updatedBookings = props.bookings.filter(booking => {\r\n                return booking._id !== bookingId;\r\n            })\r\n            props.setBookings(updatedBookings);\r\n            \r\n            setIsLoading(false);\r\n            \r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <ul className='bookings__list'>\r\n            {props.bookings && props.bookings.map(booking => {\r\n                return (<li key={booking._id} className='bookings__item'>\r\n                    <div className='bookings__item-data'>\r\n                        {booking.event.title} - {' '}\r\n                        {new Date(booking.createdAt).toLocaleDateString()}\r\n                    </div>\r\n                    <div className='bookings__item-actions'>\r\n                        <button onClick={onDelete.bind(this, booking._id)} className=\"btn\">Cancel</button>\r\n                    </div>\r\n                </li>)\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default BookingList;","import React from 'react';\r\nvar BarChart = require(\"react-chartjs\").Bar;\r\n\r\nconst BOOKINGS_BUCKETS ={\r\n    Cheap: {max: 100, min: 0},\r\n    Normal: {max:200, min: 100},\r\n    Expensive: {max: 1000000, min: 200}\r\n}\r\n\r\n\r\n\r\nconst BookingsChart = props => {\r\n    let values = []\r\n    const data = {labels: [], datasets: []};\r\n    for(const bucket in BOOKINGS_BUCKETS) {\r\n        const filteredBookings = props.bookings.reduce((prev, current) => {\r\n            console.log(current.event.price, BOOKINGS_BUCKETS[bucket]);\r\n            \r\n            if(current.event.price > BOOKINGS_BUCKETS[bucket].min && current.event.price < BOOKINGS_BUCKETS[bucket].max) {\r\n\r\n                return prev + 1\r\n            } else {\r\n                return prev\r\n            }\r\n        }, 0);\r\n        values.push(filteredBookings)\r\n        data.labels.push(bucket);\r\n        data.datasets.push({\r\n            backgroundColor: 'rgba(255,99,132,0.2)',\r\n            borderColor: 'rgba(255,99,132,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n            hoverBorderColor: 'rgba(255,99,132,1)',\r\n            data: values\r\n        });\r\n        values = [...values];\r\n        values[values.length - 1] = 0\r\n    }\r\n    \r\n    return (\r\n      <div style={{textAlign: 'center'}}>\r\n        <BarChart data={data} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default BookingsChart;","import React from 'react';\r\nimport './BookingsControl.css'\r\n\r\nconst BookingsControl = props => {\r\n    return (\r\n        <div className=\"bookings-control\">\r\n            <button className={props.actioveOutput === 'list' ? 'active' : ''} onClick={props.changeOutputHandler.bind(this, 'list')}>List</button>\r\n            <button className={props.actioveOutput === 'chart' ? 'active' : ''} onClick={props.changeOutputHandler.bind(this, 'chart')}>Chart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookingsControl;","import React, {useState, useEffect, useContext} from 'react';\r\nimport AuthContext from '../context/auth-context';\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport BookingList from '../components/Bookings/BookingList';\r\nimport BookingsChart from '../components/Bookings/BookingsChart';\r\nimport BookingsControl from '../components/Bookings/BookingsControls';\r\n\r\nconst BookingsPage = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [bookings, setBookings] = useState('');\r\n    const [output, setOutput] = useState('list');\r\n    const {token, userId} = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        fetchBookings();\r\n        test()\r\n    }, [])\r\n//--------------------------------------------------------------\r\n    const test = () => {\r\n        fetch('https://api.github.com/users/vasivanov/repos', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }).then(res => {\r\n            \r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            resData.map(e => {\r\n                console.log(e.name);\r\n                console.log(e.html_url);\r\n            })\r\n\r\n            \r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n//------------------------------------------------\r\n    const fetchBookings = () => {\r\n        setIsLoading(true);\r\n        const reqBody = {\r\n            query:`\r\n                query {\r\n                    bookings {\r\n                        _id\r\n                        createdAt\r\n                        event {\r\n                            _id\r\n                            title\r\n                            date\r\n                            price\r\n                        }\r\n                    }\r\n                }\r\n            `\r\n        };\r\n    \r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(reqBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n            \r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            setBookings(resData.data.bookings);\r\n            console.log(resData);\r\n            setIsLoading(false);\r\n            \r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setIsLoading(false);\r\n        });\r\n\r\n    }\r\n    const changeOutputHandler = (output) => {\r\n        if(output === 'list') {\r\n            setOutput('list')\r\n        } else {\r\n            setOutput('chart')\r\n        }\r\n    }\r\n    let content = <Spinner />;\r\n    if(!isLoading) {\r\n        content = (\r\n            <React.Fragment>\r\n                <BookingsControl  changeOutputHandler={changeOutputHandler} actioveOutput={output}/>\r\n                \r\n                <div>\r\n                    {output === 'list' ? <BookingList setBookings={setBookings} bookings={bookings}/> : <BookingsChart bookings={bookings}/>}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n          {content}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default BookingsPage;","import React, {useContext} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './MainNavigation.css';\r\nimport AuthContext from '../../context/auth-context'\r\n\r\nconst MainNavigation = () => {\r\n  const {token, userId, logout} = useContext(AuthContext)\r\n  \r\n  return (\r\n      <header className=\"main-navigation\">\r\n          <div className=\"main-navigation__logo\">\r\n              <h1>Event Booker</h1>\r\n          </div>\r\n          <nav className=\"main-navigation__items\">\r\n              <ul>\r\n                  <li><NavLink to=\"/events\">Events</NavLink></li>\r\n                  {token && <li><NavLink to=\"/bookings\">Bookings</NavLink></li>}\r\n                  {!token && <li><NavLink to=\"/auth\">Authentication</NavLink></li>}\r\n                  {token && <li><button onClick={logout}>Logout</button></li>}\r\n              </ul>\r\n          </nav>\r\n      </header>\r\n  )  \r\n}\r\n\r\nexport default MainNavigation;","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter, Route, Redirect, Switch} from 'react-router-dom';\r\nimport AuthPage from './pages/Auth';\r\nimport EventsPage from './pages/Events';\r\nimport BookingsPage from './pages/Bookings';\r\nimport MainNavigation from './components/Navigation/MainNavigation';\r\nimport AuthContext from './context/auth-context';\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const login = (token, userId, tokenExpiration) => {\r\n    setToken(token);\r\n    setUserId(userId);\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUserId(null);\r\n  }\r\n  \r\n  window.onbeforeunload = function () {\r\n    if(token) {\r\n      localStorage.setItem('token', token);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n      <AuthContext.Provider value={{token: token, userId: userId, logout, login}}>\r\n      <MainNavigation/>\r\n      <main className=\"main-content\">\r\n        <Switch>\r\n          {token && <Redirect from=\"/\" to=\"/events\" exact/>}\r\n          {token && <Redirect from=\"/auth\" to=\"/events\" exact/>}\r\n          {!token && <Route path=\"/auth\" component={AuthPage}/>}\r\n          <Route path=\"/events\" component={EventsPage}/>\r\n          {token && <Route path=\"/bookings\" component={BookingsPage}/>}\r\n          {!token && <Redirect to=\"/auth\" exact/>}\r\n        </Switch>\r\n      </main>\r\n      </AuthContext.Provider>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}